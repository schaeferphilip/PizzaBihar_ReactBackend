{"ast":null,"code":"var _jsxFileName = \"/Users/schaeferphilip/Downloads/Bihar/ReactBackend/src/Pizza.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pizza = props => {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  let datarows = React.useState([]);\n  let datacols = React.useState([]);\n  let columns = [];\n  let rows = [];\n  let TableTitle;\n  let columnsinfo;\n  const STATUSES = {\n    PIZZA: 'pizza',\n    ING: 'ingredients',\n    ORD: 'orders',\n    CUS: 'customer',\n    STA: 'status',\n    PI: 'pizing',\n    OP: 'ordpiz'\n  };\n  const [state, setState] = useState();\n  React.useEffect(() => {\n    axios('http://localhost:5000/pizza').then(response => {\n      if (response.status === 200) {\n        const datarows = response.data.rows;\n        console.log('----------------------------');\n\n        for (let i = 0; i < datacols.length; i++) {\n          datacols = response.data.metaData[i].name;\n          columns.push(datacols);\n          console.log(columns);\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  let datadisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"datadisplay\",\n    children: \"----\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this);\n\n  const pizza = () => {\n    console.log('pizza');\n    TableTitle = 'Pizza';\n    setState(STATUSES.PIZZA);\n    axios('http://localhost:5000/pizza').then(response => {\n      if (response.status === 200) {\n        datadisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"datadisplay\",\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this);\n        datarows = response.data.rows;\n        console.log(datarows);\n        setData(datarows);\n        console.log(datarows[1]);\n        console.log(columns); //return (datadisplay)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const orders = () => {\n    console.log('orders');\n    TableTitle = 'Orders';\n    setState(STATUSES.ORD);\n    axios('http://localhost:5000/orders').then(response => {\n      if (response.status === 200) {\n        datadisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"datadisplay\",\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 31\n        }, this);\n        datarows = response.data.rows;\n        console.log(datarows);\n        setData(response.data.rows);\n        console.log(columns); //return (datadisplay)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const customer = () => {\n    console.log('customer');\n    TableTitle = 'Customer';\n    setState(STATUSES.CUS);\n    axios('http://localhost:5000/customer').then(response => {\n      if (response.status === 200) {\n        datadisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"datadisplay\",\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this);\n        datarows = response.data.rows;\n        console.log(datarows);\n        setData(response.data.rows);\n        console.log(columns); //return (datadisplay)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const ingredients = () => {\n    console.log('ingredients');\n    TableTitle = 'Ingredients';\n    setState(STATUSES.ING);\n    axios('http://localhost:5000/ingredients').then(response => {\n      if (response.status === 200) {\n        datadisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"datadisplay\",\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this);\n        datarows = response.data.rows;\n        console.log(datarows);\n        setData(response.data.rows);\n        console.log(columns); //return (datadisplay)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const status = () => {\n    console.log('status');\n    TableTitle = 'Status';\n    setState(STATUSES.STA);\n    axios('http://localhost:5000/status').then(response => {\n      if (response.status === 200) {\n        datadisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"datadisplay\",\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }, this);\n        datarows = response.data.rows;\n        console.log(datarows);\n        setData(response.data.rows);\n        console.log(columns); //return (datadisplay)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const pizzaingredients = () => {\n    console.log('Pizza_Ingredients');\n    TableTitle = 'Pizza_Ingredients';\n    setState(STATUSES.PI);\n    axios('http://localhost:5000/pizzaingredients').then(response => {\n      if (response.status === 200) {\n        datadisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"datadisplay\",\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 27\n        }, this);\n        datarows = response.data.rows;\n        console.log(datarows);\n        setData(response.data.rows);\n        console.log(columns); //return (datadisplay)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const orderspizza = () => {\n    console.log('Orders_pizza');\n    TableTitle = 'Pizza';\n    setState(STATUSES.OP);\n    axios('http://localhost:5000/orderspizza').then(response => {\n      if (response.status === 200) {\n        datadisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"datadisplay\",\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 27\n        }, this);\n        datarows = response.data.rows;\n        console.log(datarows);\n        setData(response.data.rows);\n        console.log(columns); //return (datadisplay)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  if (state === STATUSES.PIZZA) {\n    columnsinfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"PIZZA \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"----------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 64\n      }, this), \"ID , NAME , PRICE\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }, this);\n  } else if (state === STATUSES.ING) {\n    columnsinfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"INGREDIENTS \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"----------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 70\n      }, this), \"ID , NAME , PRICE\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }, this);\n  } else if (state === STATUSES.ORD) {\n    columnsinfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"ORDERS \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 16\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"----------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 65\n      }, this), \"ID , NAME , PRICE , CUSTOMERID , STATUSID\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }, this);\n  } else if (state === STATUSES.CUS) {\n    columnsinfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"CUSTOMER \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 18\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"----------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 67\n      }, this), \"ID , NAME , EMAIL , BIRTH , VIP\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }, this);\n  } else if (state === STATUSES.STA) {\n    columnsinfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"STATUS \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 16\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"----------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 65\n      }, this), \"ID , NAME\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }, this);\n  } else if (state === STATUSES.PI) {\n    columnsinfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"PIZZA_INGREDIENTS \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"----------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 76\n      }, this), \"PIZZAID , INGREDIENTSID\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }, this);\n  } else if (state === STATUSES.OP) {\n    columnsinfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"ORDERS_PIZZA \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 22\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"----------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 71\n      }, this), \"PIZZAID , ORDERID\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: pizza,\n      children: \"Pizzas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: ingredients,\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: customer,\n      children: \"Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: orders,\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: status,\n      children: \"Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: pizzaingredients,\n      children: \"Pizza_Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: orderspizza,\n      children: \"Orders_Pizza\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"----------------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"----------------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), columnsinfo, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"----------------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"----------------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), data.length > 0 && data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", ' ' + item + ' ']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"----------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: pizza,\n      children: \"Pizzas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: ingredients,\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: customer,\n      children: \"Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: orders,\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: status,\n      children: \"Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: pizzaingredients,\n      children: \"Pizza_Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button\",\n      onClick: orderspizza,\n      children: \"Orders_Pizza\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this), datadisplay]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Pizza, \"tN8HbORra7vxeB0mXi8WiX+Snls=\");\n\n_c = Pizza;\nexport default Pizza;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pizza\");","map":{"version":3,"names":["React","useEffect","useState","axios","BootstrapTable","TableHeaderColumn","Pizza","props","data","setData","datarows","datacols","columns","rows","TableTitle","columnsinfo","STATUSES","PIZZA","ING","ORD","CUS","STA","PI","OP","state","setState","then","response","status","console","log","i","length","metaData","name","push","catch","err","datadisplay","pizza","orders","customer","ingredients","pizzaingredients","orderspizza","map","item","index"],"sources":["/Users/schaeferphilip/Downloads/Bihar/ReactBackend/src/Pizza.js"],"sourcesContent":["import React , { useEffect, useState }   from \"react\";\nimport axios from 'axios';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nconst Pizza = props =>{\n    const [data, setData] = React.useState([]);\n    let datarows = React.useState([]);\n    let datacols = React.useState([]);\n    let columns = []\n    let rows = []\n    let TableTitle\n    let columnsinfo\n\n    const STATUSES = {\n        PIZZA: 'pizza',\n        ING: 'ingredients',\n        ORD: 'orders',\n        CUS: 'customer',\n        STA: 'status',\n        PI: 'pizing',\n        OP: 'ordpiz'\n      }\n\n      const [state, setState] = useState();\n\n    React.useEffect(()=>{\n        axios('http://localhost:5000/pizza')\n        .then(response=>{\n            if(response.status===200){\n                const datarows =response.data.rows;\n                console.log('----------------------------')\n                for (let i = 0; i < datacols.length; i++){\n                  datacols = response.data.metaData[i].name;\n                  columns.push(datacols)\n                  console.log(columns)\n                }              \n            }\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    },[]);\n\n    let datadisplay=<div id='datadisplay'>----</div>;\n\n    const pizza = () => {\n        console.log('pizza')\n        TableTitle = 'Pizza'\n        setState(STATUSES.PIZZA)\n        axios('http://localhost:5000/pizza')\n            .then(response=>{\n                if(response.status===200){\n                    datadisplay=<div id='datadisplay'>test</div>\n                    datarows =response.data.rows;\n                    console.log(datarows);\n                    setData(datarows);\n                    console.log(datarows[1]);\n                    console.log(columns)\n                    //return (datadisplay)\n                }\n            })\n            .catch(err=>{\n                console.log(err);\n            })\n    }\n\n    const orders = () => {\n      console.log('orders')\n      TableTitle = 'Orders'\n      setState(STATUSES.ORD)\n      axios('http://localhost:5000/orders')\n          .then(response=>{\n              if(response.status===200){\n                  datadisplay=<div id='datadisplay'>test</div>\n                  datarows =response.data.rows;\n                  console.log(datarows);\n                  setData(response.data.rows);\n                  console.log(columns)\n                  //return (datadisplay)\n              }\n          })\n          .catch(err=>{\n              console.log(err);\n          })\n    }\n\n    const customer = () => {\n      console.log('customer')\n      TableTitle = 'Customer'\n      setState(STATUSES.CUS)\n      axios('http://localhost:5000/customer')\n          .then(response=>{\n              if(response.status===200){\n                  datadisplay=<div id='datadisplay'>test</div>\n                  datarows =response.data.rows;\n                  console.log(datarows);\n                  setData(response.data.rows);\n                  console.log(columns)\n                  //return (datadisplay)\n              }\n          })\n          .catch(err=>{\n              console.log(err);\n          })\n  }\n  \n  const ingredients = () => {\n    console.log('ingredients')\n    TableTitle = 'Ingredients'\n    setState(STATUSES.ING)\n    axios('http://localhost:5000/ingredients')\n        .then(response=>{\n            if(response.status===200){\n                datadisplay=<div id='datadisplay'>test</div>\n                datarows =response.data.rows;\n                console.log(datarows);\n                setData(response.data.rows);\n                console.log(columns)\n                //return (datadisplay)\n            }\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n}\n\nconst status = () => {\n  console.log('status')\n  TableTitle = 'Status'\n  setState(STATUSES.STA)\n  axios('http://localhost:5000/status')\n      .then(response=>{\n          if(response.status===200){\n              datadisplay=<div id='datadisplay'>test</div>\n              datarows =response.data.rows;\n              console.log(datarows);\n              setData(response.data.rows);\n              console.log(columns)\n              //return (datadisplay)\n          }\n      })\n      .catch(err=>{\n          console.log(err);\n      })\n}\n\nconst pizzaingredients = () => {\n  console.log('Pizza_Ingredients')\n  TableTitle = 'Pizza_Ingredients'\n  setState(STATUSES.PI)\n  axios('http://localhost:5000/pizzaingredients')\n      .then(response=>{\n          if(response.status===200){\n              datadisplay=<div id='datadisplay'>test</div>\n              datarows =response.data.rows;\n              console.log(datarows);\n              setData(response.data.rows);\n              console.log(columns)\n              //return (datadisplay)\n          }\n      })\n      .catch(err=>{\n          console.log(err);\n      })\n}\n\nconst orderspizza = () => {\n  console.log('Orders_pizza')\n  TableTitle = 'Pizza'\n  setState(STATUSES.OP)\n  axios('http://localhost:5000/orderspizza')\n      .then(response=>{\n          if(response.status===200){\n              datadisplay=<div id='datadisplay'>test</div>\n              datarows =response.data.rows;\n              console.log(datarows);\n              setData(response.data.rows);\n              console.log(columns)\n              //return (datadisplay)\n          }\n      })\n      .catch(err=>{\n          console.log(err);\n      })\n}\n\nif(state === STATUSES.PIZZA){\n    columnsinfo = <div> \n        PIZZA <br></br> <div>----------------------------</div><br></br>\n        ID , NAME , PRICE\n        </div>\n} else if(state === STATUSES.ING){\n    columnsinfo = <div> \n        INGREDIENTS <br></br> <div>----------------------------</div><br></br>\n        ID , NAME , PRICE\n        </div>\n} else if(state === STATUSES.ORD){\n    columnsinfo = <div> \n        ORDERS <br></br> <div>----------------------------</div><br></br>\n        ID , NAME , PRICE , CUSTOMERID , STATUSID\n        </div>\n} else if(state === STATUSES.CUS){\n    columnsinfo = <div> \n        CUSTOMER <br></br> <div>----------------------------</div><br></br>\n        ID , NAME , EMAIL , BIRTH , VIP\n        </div>\n} else if(state === STATUSES.STA){\n    columnsinfo = <div> \n        STATUS <br></br> <div>----------------------------</div><br></br>\n        ID , NAME\n        </div>\n} else if(state === STATUSES.PI){\n    columnsinfo = <div> \n        PIZZA_INGREDIENTS <br></br> <div>----------------------------</div><br></br>\n        PIZZAID , INGREDIENTSID\n        </div>\n} else if(state === STATUSES.OP){\n    columnsinfo = <div> \n        ORDERS_PIZZA <br></br> <div>----------------------------</div><br></br>\n        PIZZAID , ORDERID\n        </div>\n}\n\n\n\n    return(<div>\n\n        <button id='button' onClick={pizza}>Pizzas</button>\n        <button id='button' onClick={ingredients}>Ingredients</button>\n        <button id='button' onClick={customer}>Customer</button>\n        <button id='button' onClick={orders}>Orders</button>\n        <button id='button' onClick={status}>Status</button>\n        <button id='button' onClick={pizzaingredients}>Pizza_Ingredients</button>\n        <button id='button' onClick={orderspizza}>Orders_Pizza</button>\n\n        <div>----------------------------</div>\n        <div>----------------------------</div>\n\n        {columnsinfo}\n        <div>----------------------------</div>\n        <div>----------------------------</div>\n        {\n            data.length>0 &&\n            data.map((item,index)=>\n            <div>\n            <div key={index}> {' ' + item + ' '}</div>\n            <div>----------------------------</div>\n            </div>\n            )\n        }\n       \n        <button id='button' onClick={pizza}>Pizzas</button>\n        <button id='button' onClick={ingredients}>Ingredients</button>\n        <button id='button' onClick={customer}>Customer</button>\n        <button id='button' onClick={orders}>Orders</button>\n        <button id='button' onClick={status}>Status</button>\n        <button id='button' onClick={pizzaingredients}>Pizza_Ingredients</button>\n        <button id='button' onClick={orderspizza}>Orders_Pizza</button>\n        {datadisplay}\n\n       \n\n    </div>)\n}\n\nexport default Pizza;"],"mappings":"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"},"metadata":{},"sourceType":"module"}